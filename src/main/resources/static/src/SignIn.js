import React, { useState } from "react";

function SignIn() {
    const [form, setForm] = useState({ email: "", password: "" });

    const handleChange = (e) => {
        setForm({ ...form, [e.target.name]: e.target.value });
    };

    const handleSubmit = async (e) => {
        e.preventDefault();
        console.log("üì§ –ù–∞–¥—Å–∏–ª–∞—î–º–æ –∑–∞–ø–∏—Ç –Ω–∞ /auth/sign-in –∑ –¥–∞–Ω–∏–º–∏:", form);

        try {
            const res = await fetch("/auth/sign-in", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(form),
            });

            console.log("üì• –í—ñ–¥–ø–æ–≤—ñ–¥—å —Å—Ç–∞—Ç—É—Å:", res.status);
            const text = await res.text();
            console.log("üì• –°–∏—Ä–æ–≤–∏–π —Ç–µ–∫—Å—Ç –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ:", text);

            let data;
            try {
                data = JSON.parse(text);
                console.log("‚úÖ –†–æ–∑–ø–∞—Ä—Å–µ–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å:", data);
            } catch {
                console.error("‚ùå –ù–µ–º–æ–∂–ª–∏–≤–æ —Ä–æ–∑–ø–∞—Ä—Å–∏—Ç–∏ JSON. –í—ñ–¥–ø–æ–≤—ñ–¥—å:", text);
                throw new Error("–°–µ—Ä–≤–µ—Ä –ø–æ–≤–µ—Ä–Ω—É–≤ –Ω–µ JSON");
            }

            if (res.ok) {
                alert("‚úÖ –£—Å–ø—ñ—à–Ω–∏–π –≤—Ö—ñ–¥! JWT: " + data.token);
                window.location.href = "/"; // –∑–º—ñ–Ω–∏ –ø—Ä–∏ –ø–æ—Ç—Ä–µ–±—ñ –Ω–∞ index.html
            } else {
                alert("‚ùå –ü–æ–º–∏–ª–∫–∞: " + (data.message || "–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞"));
            }
        } catch (err) {
            alert("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∞–±–æ —Å—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞: " + err.message);
            console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å fetch:", err);
        }
    };

    return (
        <form onSubmit={handleSubmit}>
            <h2>–í—Ö—ñ–¥</h2>
            <input
                name="email"
                type="email"
                placeholder="Email"
                onChange={handleChange}
                required
            /><br />
            <input
                name="password"
                type="password"
                placeholder="–ü–∞—Ä–æ–ª—å"
                onChange={handleChange}
                required
            /><br />
            <button type="submit">–£–≤—ñ–π—Ç–∏</button>
        </form>
    );
}

export default SignIn;
