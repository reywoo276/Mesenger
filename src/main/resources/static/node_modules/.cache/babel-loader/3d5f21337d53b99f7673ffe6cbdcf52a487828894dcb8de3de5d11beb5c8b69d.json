{"ast":null,"code":"const CHAT_SERVICE = \"http://localhost:8080\";\nconst request = options => {\n  const headers = new Headers();\n  if (options.setContentType !== false) {\n    headers.append(\"Content-Type\", \"application/json\");\n  }\n  if (localStorage.getItem(\"accessToken\")) {\n    headers.append(\"Authorization\", \"Bearer \" + localStorage.getItem(\"accessToken\"));\n  }\n  const defaults = {\n    headers: headers\n  };\n  options = Object.assign({}, defaults, options);\n  return fetch(options.url, options).then(response => response.json().then(json => {\n    if (!response.ok) {\n      return Promise.reject(json);\n    }\n    return json;\n  }));\n};\nexport function login(loginRequest) {\n  return request({\n    url: CHAT_SERVICE + \"/auth/sign-up\",\n    method: \"POST\",\n    body: JSON.stringify(loginRequest)\n  });\n}\n\n// export function facebookLogin(facebookLoginRequest) {\n//     return request({\n//         url: AUTH_SERVICE + \"/facebook/signin\",\n//         method: \"POST\",\n//         body: JSON.stringify(facebookLoginRequest),\n//     });\n// }\n\nexport function signup(signupRequest) {\n  return request({\n    url: AUTH_SERVICE + \"/users\",\n    method: \"POST\",\n    body: JSON.stringify(signupRequest)\n  });\n}\nexport function getCurrentUser() {\n  if (!localStorage.getItem(\"accessToken\")) {\n    return Promise.reject(\"No access token set.\");\n  }\n  return request({\n    url: AUTH_SERVICE + \"/users/me\",\n    method: \"GET\"\n  });\n}\nexport function getUsers() {\n  if (!localStorage.getItem(\"accessToken\")) {\n    return Promise.reject(\"No access token set.\");\n  }\n  return request({\n    url: AUTH_SERVICE + \"/users/summaries\",\n    method: \"GET\"\n  });\n}\nexport function countNewMessages(senderId, recipientId) {\n  if (!localStorage.getItem(\"accessToken\")) {\n    return Promise.reject(\"No access token set.\");\n  }\n  return request({\n    url: CHAT_SERVICE + \"/messages/\" + senderId + \"/\" + recipientId + \"/count\",\n    method: \"GET\"\n  });\n}\nexport function findChatMessages(senderId, recipientId) {\n  if (!localStorage.getItem(\"accessToken\")) {\n    return Promise.reject(\"No access token set.\");\n  }\n  return request({\n    url: CHAT_SERVICE + \"/messages/\" + senderId + \"/\" + recipientId,\n    method: \"GET\"\n  });\n}\nexport function findChatMessage(id) {\n  if (!localStorage.getItem(\"accessToken\")) {\n    return Promise.reject(\"No access token set.\");\n  }\n  return request({\n    url: CHAT_SERVICE + \"/messages/\" + id,\n    method: \"GET\"\n  });\n}","map":{"version":3,"names":["CHAT_SERVICE","request","options","headers","Headers","setContentType","append","localStorage","getItem","defaults","Object","assign","fetch","url","then","response","json","ok","Promise","reject","login","loginRequest","method","body","JSON","stringify","signup","signupRequest","AUTH_SERVICE","getCurrentUser","getUsers","countNewMessages","senderId","recipientId","findChatMessages","findChatMessage","id"],"sources":["C:/Users/ludmi/IdeaProjects/Mesenger/src/main/resources/static/src/util/ApiUtil.js"],"sourcesContent":["const CHAT_SERVICE = \"http://localhost:8080\";\r\n\r\nconst request = (options) => {\r\n    const headers = new Headers();\r\n\r\n    if (options.setContentType !== false) {\r\n        headers.append(\"Content-Type\", \"application/json\");\r\n    }\r\n\r\n    if (localStorage.getItem(\"accessToken\")) {\r\n        headers.append(\r\n            \"Authorization\",\r\n            \"Bearer \" + localStorage.getItem(\"accessToken\")\r\n        );\r\n    }\r\n\r\n    const defaults = { headers: headers };\r\n    options = Object.assign({}, defaults, options);\r\n\r\n    return fetch(options.url, options).then((response) =>\r\n        response.json().then((json) => {\r\n            if (!response.ok) {\r\n                return Promise.reject(json);\r\n            }\r\n            return json;\r\n        })\r\n    );\r\n};\r\n\r\nexport function login(loginRequest) {\r\n    return request({\r\n        url: CHAT_SERVICE + \"/auth/sign-up\",\r\n        method: \"POST\",\r\n        body: JSON.stringify(loginRequest),\r\n    });\r\n}\r\n\r\n// export function facebookLogin(facebookLoginRequest) {\r\n//     return request({\r\n//         url: AUTH_SERVICE + \"/facebook/signin\",\r\n//         method: \"POST\",\r\n//         body: JSON.stringify(facebookLoginRequest),\r\n//     });\r\n// }\r\n\r\nexport function signup(signupRequest) {\r\n    return request({\r\n        url: AUTH_SERVICE + \"/users\",\r\n        method: \"POST\",\r\n        body: JSON.stringify(signupRequest),\r\n    });\r\n}\r\n\r\nexport function getCurrentUser() {\r\n    if (!localStorage.getItem(\"accessToken\")) {\r\n        return Promise.reject(\"No access token set.\");\r\n    }\r\n\r\n    return request({\r\n        url: AUTH_SERVICE + \"/users/me\",\r\n        method: \"GET\",\r\n    });\r\n}\r\n\r\nexport function getUsers() {\r\n    if (!localStorage.getItem(\"accessToken\")) {\r\n        return Promise.reject(\"No access token set.\");\r\n    }\r\n\r\n    return request({\r\n        url: AUTH_SERVICE + \"/users/summaries\",\r\n        method: \"GET\",\r\n    });\r\n}\r\n\r\nexport function countNewMessages(senderId, recipientId) {\r\n    if (!localStorage.getItem(\"accessToken\")) {\r\n        return Promise.reject(\"No access token set.\");\r\n    }\r\n\r\n    return request({\r\n        url: CHAT_SERVICE + \"/messages/\" + senderId + \"/\" + recipientId + \"/count\",\r\n        method: \"GET\",\r\n    });\r\n}\r\n\r\nexport function findChatMessages(senderId, recipientId) {\r\n    if (!localStorage.getItem(\"accessToken\")) {\r\n        return Promise.reject(\"No access token set.\");\r\n    }\r\n\r\n    return request({\r\n        url: CHAT_SERVICE + \"/messages/\" + senderId + \"/\" + recipientId,\r\n        method: \"GET\",\r\n    });\r\n}\r\n\r\nexport function findChatMessage(id) {\r\n    if (!localStorage.getItem(\"accessToken\")) {\r\n        return Promise.reject(\"No access token set.\");\r\n    }\r\n\r\n    return request({\r\n        url: CHAT_SERVICE + \"/messages/\" + id,\r\n        method: \"GET\",\r\n    });\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}