{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ludmi\\\\IdeaProjects\\\\Mesenger\\\\src\\\\main\\\\resources\\\\static\\\\src\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport SockJS from \"sockjs-client\";\nimport Stomp from \"stompjs\";\nimport \"./Chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [stompClient, setStompClient] = useState(null);\n  const currentUser = {\n    id: localStorage.getItem(\"userId\"),\n    name: localStorage.getItem(\"username\") || \"–Ø\"\n  };\n\n  // –ü—Ä–∏–º–µ—Ä: –∞–∫—Ç–∏–≤–Ω—ã–π –∫–æ–Ω—Ç–∞–∫—Ç (–≤—ã–±—Ä–∞—Ç—å –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ)\n  const activeContact = {\n    id: \"2\",\n    // ID –¥—Ä—É–≥–æ–≥–æ —é–∑–µ—Ä–∞\n    name: \"–î—Ä—É–≥\"\n  };\n  useEffect(() => {\n    const socket = new SockJS(\"http://localhost:8080/ws\");\n    const client = Stomp.over(socket);\n    client.connect({}, () => {\n      client.subscribe(`/user/${currentUser.id}/queue/messages`, msg => {\n        const body = JSON.parse(msg.body);\n        setMessages(prev => [...prev, {\n          sender: body.senderName,\n          text: body.content\n        }]);\n      });\n    });\n    setStompClient(client);\n    return () => {\n      if (client && client.connected) client.disconnect();\n    };\n  }, [currentUser.id]);\n  const sendMessage = e => {\n    e.preventDefault();\n    if (input.trim() === \"\" || !stompClient || !stompClient.connected) return;\n    const msg = {\n      senderId: currentUser.id,\n      senderName: currentUser.name,\n      recipientId: activeContact.id,\n      recipientName: activeContact.name,\n      content: input,\n      timestamp: new Date()\n    };\n    stompClient.send(\"/app/chat\", {}, JSON.stringify(msg));\n    setMessages(prev => [...prev, {\n      sender: \"–Ø\",\n      text: input\n    }]);\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [\"\\uD83D\\uDCAC \\u0427\\u0430\\u0442 \\u0441 \", activeContact.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.sender, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), \" \", msg.text]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sendMessage,\n        className: \"input-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435...\",\n          className: \"message-input\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"send-button\",\n          children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"r00SYO/e2djLF/qP7skG39UopA8=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","SockJS","Stomp","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","input","setInput","stompClient","setStompClient","currentUser","id","localStorage","getItem","name","activeContact","socket","client","over","connect","subscribe","msg","body","JSON","parse","prev","sender","senderName","text","content","connected","disconnect","sendMessage","e","preventDefault","trim","senderId","recipientId","recipientName","timestamp","Date","send","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","idx","onSubmit","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/ludmi/IdeaProjects/Mesenger/src/main/resources/static/src/Chat.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport SockJS from \"sockjs-client\";\r\nimport Stomp from \"stompjs\";\r\nimport \"./Chat.css\";\r\n\r\nfunction Chat() {\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState(\"\");\r\n    const [stompClient, setStompClient] = useState(null);\r\n\r\n    const currentUser = {\r\n        id: localStorage.getItem(\"userId\"),\r\n        name: localStorage.getItem(\"username\") || \"–Ø\"\r\n    };\r\n\r\n    // –ü—Ä–∏–º–µ—Ä: –∞–∫—Ç–∏–≤–Ω—ã–π –∫–æ–Ω—Ç–∞–∫—Ç (–≤—ã–±—Ä–∞—Ç—å –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ)\r\n    const activeContact = {\r\n        id: \"2\", // ID –¥—Ä—É–≥–æ–≥–æ —é–∑–µ—Ä–∞\r\n        name: \"–î—Ä—É–≥\"\r\n    };\r\n\r\n    useEffect(() => {\r\n        const socket = new SockJS(\"http://localhost:8080/ws\");\r\n        const client = Stomp.over(socket);\r\n\r\n        client.connect({}, () => {\r\n            client.subscribe(\r\n                `/user/${currentUser.id}/queue/messages`,\r\n                (msg) => {\r\n                    const body = JSON.parse(msg.body);\r\n                    setMessages((prev) => [...prev, {\r\n                        sender: body.senderName,\r\n                        text: body.content\r\n                    }]);\r\n                }\r\n            );\r\n        });\r\n\r\n        setStompClient(client);\r\n\r\n        return () => {\r\n            if (client && client.connected) client.disconnect();\r\n        };\r\n    }, [currentUser.id]);\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        if (input.trim() === \"\" || !stompClient || !stompClient.connected) return;\r\n\r\n        const msg = {\r\n            senderId: currentUser.id,\r\n            senderName: currentUser.name,\r\n            recipientId: activeContact.id,\r\n            recipientName: activeContact.name,\r\n            content: input,\r\n            timestamp: new Date()\r\n        };\r\n\r\n        stompClient.send(\"/app/chat\", {}, JSON.stringify(msg));\r\n\r\n        setMessages((prev) => [...prev, { sender: \"–Ø\", text: input }]);\r\n        setInput(\"\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <div className=\"chat-box\">\r\n                <div className=\"chat-header\">üí¨ –ß–∞—Ç —Å {activeContact.name}</div>\r\n                <div className=\"messages\">\r\n                    {messages.map((msg, idx) => (\r\n                        <div key={idx} className=\"message\">\r\n                            <strong>{msg.sender}:</strong> {msg.text}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <form onSubmit={sendMessage} className=\"input-form\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={input}\r\n                        onChange={(e) => setInput(e.target.value)}\r\n                        placeholder=\"–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...\"\r\n                        className=\"message-input\"\r\n                        required\r\n                    />\r\n                    <button type=\"submit\" className=\"send-button\">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}