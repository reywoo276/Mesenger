{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ludmi\\\\IdeaProjects\\\\Mesenger\\\\src\\\\main\\\\resources\\\\static\\\\src\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport SockJS from \"sockjs-client\";\nimport { Client } from \"@stomp/stompjs\";\nimport jwt_decode from \"jwt-decode\";\nimport \"./Chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [stompClient, setStompClient] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n  const activeContact = {\n    id: \"2\",\n    // допустим, ты всегда чатишься с Test2 для примера\n    name: \"Test2\"\n  };\n\n  // Функция получения токена из cookies\n  function getCurrentUserFromToken() {\n    const match = document.cookie.match(new RegExp('(^| )token=([^;]+)'));\n    if (match) {\n      var _decoded$userId;\n      const token = match[2];\n      const decoded = jwt_decode(token);\n      return {\n        id: (_decoded$userId = decoded.userId) === null || _decoded$userId === void 0 ? void 0 : _decoded$userId.toString(),\n        name: decoded.username\n      };\n    }\n    return null;\n  }\n  useEffect(() => {\n    const user = getCurrentUserFromToken();\n    if (!user) {\n      console.error(\"Пользователь не найден в токене\");\n      return;\n    }\n    setCurrentUser(user);\n    const socket = new SockJS(\"http://localhost:8080/ws\");\n    const client = new Client({\n      webSocketFactory: () => socket,\n      reconnectDelay: 5000,\n      onConnect: () => {\n        console.log(\"✅ Подключено к WebSocket как\", user);\n        client.subscribe(`/user/${user.id}/queue/messages`, msg => {\n          const body = JSON.parse(msg.body);\n          setMessages(prev => [...prev, {\n            sender: body.senderName,\n            text: body.content\n          }]);\n        });\n      },\n      onStompError: frame => {\n        console.error(\"Ошибка брокера STOMP:\", frame.headers[\"message\"]);\n        console.error(\"Подробности:\", frame.body);\n      }\n    });\n    client.activate();\n    setStompClient(client);\n    return () => {\n      if (client && client.active) client.deactivate();\n    };\n  }, []);\n  const sendMessage = e => {\n    e.preventDefault();\n    if (input.trim() === \"\" || !stompClient || !stompClient.connected || !currentUser) return;\n    const msg = {\n      senderId: currentUser.id,\n      senderName: currentUser.name,\n      recipientId: activeContact.id,\n      recipientName: activeContact.name,\n      content: input,\n      timestamp: new Date()\n    };\n    stompClient.publish({\n      destination: \"/app/chat\",\n      body: JSON.stringify(msg)\n    });\n    setMessages(prev => [...prev, {\n      sender: \"Я\",\n      text: input\n    }]);\n    setInput(\"\");\n  };\n  if (!currentUser) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [\"\\uD83D\\uDCAC \\u0427\\u0430\\u0442 \\u0441 \", activeContact.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.sender, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this), \" \", msg.text]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sendMessage,\n        className: \"input-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435...\",\n          className: \"message-input\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"send-button\",\n          children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"TICbCCMpAnY3C1ajvXGS26v3qpQ=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","SockJS","Client","jwt_decode","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","input","setInput","stompClient","setStompClient","currentUser","setCurrentUser","activeContact","id","name","getCurrentUserFromToken","match","document","cookie","RegExp","_decoded$userId","token","decoded","userId","toString","username","user","console","error","socket","client","webSocketFactory","reconnectDelay","onConnect","log","subscribe","msg","body","JSON","parse","prev","sender","senderName","text","content","onStompError","frame","headers","activate","active","deactivate","sendMessage","e","preventDefault","trim","connected","senderId","recipientId","recipientName","timestamp","Date","publish","destination","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","idx","onSubmit","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/ludmi/IdeaProjects/Mesenger/src/main/resources/static/src/Chat.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport SockJS from \"sockjs-client\";\r\nimport { Client } from \"@stomp/stompjs\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport \"./Chat.css\";\r\n\r\nfunction Chat() {\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState(\"\");\r\n    const [stompClient, setStompClient] = useState(null);\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n\r\n    const activeContact = {\r\n        id: \"2\", // допустим, ты всегда чатишься с Test2 для примера\r\n        name: \"Test2\"\r\n    };\r\n\r\n    // Функция получения токена из cookies\r\n    function getCurrentUserFromToken() {\r\n        const match = document.cookie.match(new RegExp('(^| )token=([^;]+)'));\r\n        if (match) {\r\n            const token = match[2];\r\n            const decoded = jwt_decode(token);\r\n            return {\r\n                id: decoded.userId?.toString(),\r\n                name: decoded.username\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    useEffect(() => {\r\n        const user = getCurrentUserFromToken();\r\n        if (!user) {\r\n            console.error(\"Пользователь не найден в токене\");\r\n            return;\r\n        }\r\n        setCurrentUser(user);\r\n\r\n        const socket = new SockJS(\"http://localhost:8080/ws\");\r\n        const client = new Client({\r\n            webSocketFactory: () => socket,\r\n            reconnectDelay: 5000,\r\n            onConnect: () => {\r\n                console.log(\"✅ Подключено к WebSocket как\", user);\r\n                client.subscribe(\r\n                    `/user/${user.id}/queue/messages`,\r\n                    (msg) => {\r\n                        const body = JSON.parse(msg.body);\r\n                        setMessages(prev => [...prev, {\r\n                            sender: body.senderName,\r\n                            text: body.content\r\n                        }]);\r\n                    }\r\n                );\r\n            },\r\n            onStompError: (frame) => {\r\n                console.error(\"Ошибка брокера STOMP:\", frame.headers[\"message\"]);\r\n                console.error(\"Подробности:\", frame.body);\r\n            }\r\n        });\r\n\r\n        client.activate();\r\n        setStompClient(client);\r\n\r\n        return () => {\r\n            if (client && client.active) client.deactivate();\r\n        };\r\n    }, []);\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        if (input.trim() === \"\" || !stompClient || !stompClient.connected || !currentUser) return;\r\n\r\n        const msg = {\r\n            senderId: currentUser.id,\r\n            senderName: currentUser.name,\r\n            recipientId: activeContact.id,\r\n            recipientName: activeContact.name,\r\n            content: input,\r\n            timestamp: new Date()\r\n        };\r\n\r\n        stompClient.publish({\r\n            destination: \"/app/chat\",\r\n            body: JSON.stringify(msg)\r\n        });\r\n\r\n        setMessages(prev => [...prev, { sender: \"Я\", text: input }]);\r\n        setInput(\"\");\r\n    };\r\n\r\n    if (!currentUser) {\r\n        return <div>Загрузка пользователя...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <div className=\"chat-box\">\r\n                <div className=\"chat-header\">💬 Чат с {activeContact.name}</div>\r\n                <div className=\"messages\">\r\n                    {messages.map((msg, idx) => (\r\n                        <div key={idx} className=\"message\">\r\n                            <strong>{msg.sender}:</strong> {msg.text}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <form onSubmit={sendMessage} className=\"input-form\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={input}\r\n                        onChange={(e) => setInput(e.target.value)}\r\n                        placeholder=\"Введите сообщение...\"\r\n                        className=\"message-input\"\r\n                        required\r\n                    />\r\n                    <button type=\"submit\" className=\"send-button\">Отправить</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}