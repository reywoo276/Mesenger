{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ludmi\\\\IdeaProjects\\\\Mesenger\\\\src\\\\main\\\\resources\\\\static\\\\src\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Client } from '@stomp/stompjs';\nimport SockJS from 'sockjs-client';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [recipientUsername, setRecipientUsername] = useState(\"\");\n  const [myUsername, setMyUsername] = useState(null);\n  const [connected, setConnected] = useState(false);\n  const clientRef = useRef(null);\n  const getToken = () => {\n    const match = document.cookie.match(new RegExp('(^| )token=([^;]+)'));\n    return match ? match[2] : null;\n  };\n  const fetchMyUsername = async () => {\n    try {\n      const res = await fetch(\"/auth/me\", {\n        headers: {\n          Authorization: `Bearer ${getToken()}`\n        }\n      });\n      if (res.ok) {\n        const data = await res.json();\n        setMyUsername(data.username); // ← предполагается, что API возвращает { username: \"Yaroslav\" }\n      } else {\n        throw new Error(\"Не удалось получить имя пользователя\");\n      }\n    } catch (err) {\n      console.error(\"Ошибка при получении текущего пользователя:\", err);\n      alert(\"Ошибка аутентификации. Войдите снова.\");\n      window.location.href = \"/\";\n    }\n  };\n  const fetchMessages = async recipient => {\n    try {\n      const res = await fetch(`/messages/${myUsername}/${recipient}`);\n      if (res.ok) {\n        const data = await res.json();\n        setMessages(data.map(msg => ({\n          sender: msg.senderId === myUsername ? \"Я\" : \"Он\",\n          text: msg.content\n        })));\n      }\n    } catch (err) {\n      console.error(\"Не удалось загрузить сообщения\", err);\n    }\n  };\n  useEffect(() => {\n    const token = getToken();\n    if (!token) {\n      alert(\"❌ Нет токена. Пожалуйста, войдите снова.\");\n      window.location.href = \"/\";\n      return;\n    }\n    fetchMyUsername().then(() => {\n      const socket = new SockJS(\"/ws\");\n      const client = new Client({\n        webSocketFactory: () => socket,\n        connectHeaders: {\n          Authorization: `Bearer ${token}`\n        },\n        onConnect: () => {\n          console.log(\"🟢 Подключено к WebSocket\");\n          setConnected(true);\n          client.subscribe(\"/user/queue/messages\", msg => {\n            const body = JSON.parse(msg.body);\n            if (body.senderId === recipientUsername && body.recipientId === myUsername || body.senderId === myUsername && body.recipientId === recipientUsername) {\n              setMessages(prev => [...prev, {\n                sender: body.senderId === myUsername ? \"Я\" : \"Он\",\n                text: body.content\n              }]);\n            }\n          });\n        },\n        onStompError: frame => {\n          console.error(\"STOMP ошибка: \", frame);\n        },\n        reconnectDelay: 5000\n      });\n      client.activate();\n      clientRef.current = client;\n      return () => {\n        client.deactivate();\n        setConnected(false);\n      };\n    });\n  }, []);\n  const handleSend = e => {\n    e.preventDefault();\n    const client = clientRef.current;\n    if (!message.trim() || !recipientUsername.trim()) return;\n    if (!client || !client.connected) {\n      alert(\"⛔ Подключение ещё не установлено.\");\n      return;\n    }\n    const payload = {\n      senderId: myUsername,\n      recipientId: recipientUsername,\n      content: message\n    };\n    client.publish({\n      destination: \"/app/chat\",\n      body: JSON.stringify(payload)\n    });\n    setMessages([...messages, {\n      sender: \"Я\",\n      text: message\n    }]);\n    setMessage(\"\");\n  };\n  const handleRecipientChange = e => {\n    const value = e.target.value;\n    setRecipientUsername(value);\n    if (value && myUsername) {\n      fetchMessages(value);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: \"\\uD83D\\uDCAC \\u041C\\u0435\\u0441\\u0441\\u0435\\u043D\\u0434\\u0436\\u0435\\u0440\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: connected ? \"🟢 Подключено\" : \"🔴 Подключение...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: recipientUsername,\n        onChange: handleRecipientChange,\n        placeholder: \"\\u0418\\u043C\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F \\u043F\\u043E\\u043B\\u0443\\u0447\\u0430\\u0442\\u0435\\u043B\\u044F\",\n        className: \"recipient-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.sender, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 29\n          }, this), \" \", msg.text]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSend,\n        className: \"input-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435...\",\n          className: \"message-input\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"send-button\",\n          children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"8VX+wu/p2KG2V7DqgrN4IyWCD/M=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Client","SockJS","jsxDEV","_jsxDEV","Chat","_s","message","setMessage","messages","setMessages","recipientUsername","setRecipientUsername","myUsername","setMyUsername","connected","setConnected","clientRef","getToken","match","document","cookie","RegExp","fetchMyUsername","res","fetch","headers","Authorization","ok","data","json","username","Error","err","console","error","alert","window","location","href","fetchMessages","recipient","map","msg","sender","senderId","text","content","token","then","socket","client","webSocketFactory","connectHeaders","onConnect","log","subscribe","body","JSON","parse","recipientId","prev","onStompError","frame","reconnectDelay","activate","current","deactivate","handleSend","e","preventDefault","trim","payload","publish","destination","stringify","handleRecipientChange","value","target","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","idx","onSubmit","required","_c","$RefreshReg$"],"sources":["C:/Users/ludmi/IdeaProjects/Mesenger/src/main/resources/static/src/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Client } from '@stomp/stompjs';\r\nimport SockJS from 'sockjs-client';\r\nimport './Chat.css';\r\n\r\nfunction Chat() {\r\n    const [message, setMessage] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);\r\n    const [recipientUsername, setRecipientUsername] = useState(\"\");\r\n    const [myUsername, setMyUsername] = useState(null);\r\n    const [connected, setConnected] = useState(false);\r\n    const clientRef = useRef(null);\r\n\r\n    const getToken = () => {\r\n        const match = document.cookie.match(new RegExp('(^| )token=([^;]+)'));\r\n        return match ? match[2] : null;\r\n    };\r\n\r\n    const fetchMyUsername = async () => {\r\n        try {\r\n            const res = await fetch(\"/auth/me\", {\r\n                headers: {\r\n                    Authorization: `Bearer ${getToken()}`,\r\n                }\r\n            });\r\n            if (res.ok) {\r\n                const data = await res.json();\r\n                setMyUsername(data.username); // ← предполагается, что API возвращает { username: \"Yaroslav\" }\r\n            } else {\r\n                throw new Error(\"Не удалось получить имя пользователя\");\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Ошибка при получении текущего пользователя:\", err);\r\n            alert(\"Ошибка аутентификации. Войдите снова.\");\r\n            window.location.href = \"/\";\r\n        }\r\n    };\r\n\r\n    const fetchMessages = async (recipient) => {\r\n        try {\r\n            const res = await fetch(`/messages/${myUsername}/${recipient}`);\r\n            if (res.ok) {\r\n                const data = await res.json();\r\n                setMessages(data.map(msg => ({\r\n                    sender: msg.senderId === myUsername ? \"Я\" : \"Он\",\r\n                    text: msg.content\r\n                })));\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Не удалось загрузить сообщения\", err);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const token = getToken();\r\n        if (!token) {\r\n            alert(\"❌ Нет токена. Пожалуйста, войдите снова.\");\r\n            window.location.href = \"/\";\r\n            return;\r\n        }\r\n\r\n        fetchMyUsername().then(() => {\r\n            const socket = new SockJS(\"/ws\");\r\n            const client = new Client({\r\n                webSocketFactory: () => socket,\r\n                connectHeaders: { Authorization: `Bearer ${token}` },\r\n                onConnect: () => {\r\n                    console.log(\"🟢 Подключено к WebSocket\");\r\n                    setConnected(true);\r\n\r\n                    client.subscribe(\"/user/queue/messages\", (msg) => {\r\n                        const body = JSON.parse(msg.body);\r\n                        if (\r\n                            (body.senderId === recipientUsername && body.recipientId === myUsername) ||\r\n                            (body.senderId === myUsername && body.recipientId === recipientUsername)\r\n                        ) {\r\n                            setMessages(prev => [...prev, {\r\n                                sender: body.senderId === myUsername ? \"Я\" : \"Он\",\r\n                                text: body.content\r\n                            }]);\r\n                        }\r\n                    });\r\n                },\r\n                onStompError: (frame) => {\r\n                    console.error(\"STOMP ошибка: \", frame);\r\n                },\r\n                reconnectDelay: 5000,\r\n            });\r\n\r\n            client.activate();\r\n            clientRef.current = client;\r\n\r\n            return () => {\r\n                client.deactivate();\r\n                setConnected(false);\r\n            };\r\n        });\r\n    }, []);\r\n\r\n    const handleSend = (e) => {\r\n        e.preventDefault();\r\n        const client = clientRef.current;\r\n\r\n        if (!message.trim() || !recipientUsername.trim()) return;\r\n\r\n        if (!client || !client.connected) {\r\n            alert(\"⛔ Подключение ещё не установлено.\");\r\n            return;\r\n        }\r\n\r\n        const payload = {\r\n            senderId: myUsername,\r\n            recipientId: recipientUsername,\r\n            content: message,\r\n        };\r\n\r\n        client.publish({\r\n            destination: \"/app/chat\",\r\n            body: JSON.stringify(payload),\r\n        });\r\n\r\n        setMessages([...messages, { sender: \"Я\", text: message }]);\r\n        setMessage(\"\");\r\n    };\r\n\r\n    const handleRecipientChange = (e) => {\r\n        const value = e.target.value;\r\n        setRecipientUsername(value);\r\n        if (value && myUsername) {\r\n            fetchMessages(value);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <div className=\"chat-box\">\r\n                <div className=\"chat-header\">💬 Мессенджер</div>\r\n                <div className=\"status\">{connected ? \"🟢 Подключено\" : \"🔴 Подключение...\"}</div>\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    value={recipientUsername}\r\n                    onChange={handleRecipientChange}\r\n                    placeholder=\"Имя пользователя получателя\"\r\n                    className=\"recipient-input\"\r\n                />\r\n\r\n                <div className=\"messages\">\r\n                    {messages.map((msg, idx) => (\r\n                        <div key={idx} className=\"message\">\r\n                            <strong>{msg.sender}:</strong> {msg.text}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                <form onSubmit={handleSend} className=\"input-form\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={message}\r\n                        onChange={(e) => setMessage(e.target.value)}\r\n                        placeholder=\"Введите сообщение...\"\r\n                        className=\"message-input\"\r\n                        required\r\n                    />\r\n                    <button type=\"submit\" className=\"send-button\">Отправить</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}