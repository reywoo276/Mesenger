{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ludmi\\\\IdeaProjects\\\\Mesenger\\\\src\\\\main\\\\resources\\\\static\\\\src\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Client } from '@stomp/stompjs';\nimport SockJS from 'sockjs-client';\nimport { jwtDecode } from 'jwt-decode';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [recipientId, setRecipientId] = useState(\"\");\n  const [myId, setMyId] = useState(null);\n  const [connected, setConnected] = useState(false);\n  const clientRef = useRef(null);\n  const getToken = () => {\n    const match = document.cookie.match(new RegExp('(^| )token=([^;]+)'));\n    return match ? match[2] : null;\n  };\n  const fetchMessages = async recipientId => {\n    try {\n      const res = await fetch(`/messages/${myId}/${recipientId}`);\n      if (res.ok) {\n        const data = await res.json();\n        setMessages(data.map(msg => ({\n          sender: msg.senderId === myId ? \"Я\" : \"Он\",\n          text: msg.content\n        })));\n      }\n    } catch (err) {\n      console.error(\"Не удалось загрузить сообщения\", err);\n    }\n  };\n  useEffect(() => {\n    const token = getToken();\n    if (!token) {\n      alert(\"❌ Нет токена. Пожалуйста, войдите снова.\");\n      window.location.href = \"/\";\n      return;\n    }\n    const decoded = jwtDecode(token);\n    setMyId(decoded.sub || decoded.userId);\n    const socket = new SockJS(\"/ws\");\n    const client = new Client({\n      webSocketFactory: () => socket,\n      connectHeaders: {\n        Authorization: `Bearer ${token}`\n      },\n      onConnect: () => {\n        console.log(\"🟢 Подключено к WebSocket\");\n        setConnected(true);\n        client.subscribe(\"/user/queue/messages\", msg => {\n          const body = JSON.parse(msg.body);\n          if (body.senderId === recipientId && body.recipientId === myId || body.senderId === myId && body.recipientId === recipientId) {\n            setMessages(prev => [...prev, {\n              sender: body.senderId === myId ? \"Я\" : \"Он\",\n              text: body.content\n            }]);\n          }\n        });\n      },\n      onStompError: frame => {\n        console.error(\"STOMP ошибка: \", frame);\n      },\n      reconnectDelay: 5000\n    });\n    client.activate();\n    clientRef.current = client;\n    return () => {\n      client.deactivate();\n      setConnected(false);\n    };\n  }, []);\n  const handleSend = e => {\n    e.preventDefault();\n    if (!message.trim() || !recipientId.trim()) return;\n    const client = clientRef.current;\n    if (!client || !client.connected) {\n      alert(\"⛔ Подключение ещё не установлено. Подождите немного.\");\n      return;\n    }\n    const payload = {\n      senderId: myId,\n      recipientId,\n      content: message\n    };\n    client.publish({\n      destination: \"/app/chat\",\n      body: JSON.stringify(payload)\n    });\n    setMessages([...messages, {\n      sender: \"Я\",\n      text: message\n    }]);\n    setMessage(\"\");\n  };\n  const handleRecipientChange = e => {\n    const value = e.target.value;\n    setRecipientId(value);\n    if (value && myId) {\n      fetchMessages(value);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: \"\\uD83D\\uDCAC \\u041C\\u0435\\u0441\\u0441\\u0435\\u043D\\u0434\\u0436\\u0435\\u0440\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: connected ? \"🟢 Подключено\" : \"🔴 Подключение...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: recipientId,\n        onChange: handleRecipientChange,\n        placeholder: \"ID \\u043F\\u043E\\u043B\\u0443\\u0447\\u0430\\u0442\\u0435\\u043B\\u044F\",\n        className: \"recipient-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.sender, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }, this), \" \", msg.text]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSend,\n        className: \"input-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435...\",\n          className: \"message-input\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"send-button\",\n          children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"gK4G6jrVaTZD0vs1xHGoujbxXMs=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Client","SockJS","jwtDecode","jsxDEV","_jsxDEV","Chat","_s","message","setMessage","messages","setMessages","recipientId","setRecipientId","myId","setMyId","connected","setConnected","clientRef","getToken","match","document","cookie","RegExp","fetchMessages","res","fetch","ok","data","json","map","msg","sender","senderId","text","content","err","console","error","token","alert","window","location","href","decoded","sub","userId","socket","client","webSocketFactory","connectHeaders","Authorization","onConnect","log","subscribe","body","JSON","parse","prev","onStompError","frame","reconnectDelay","activate","current","deactivate","handleSend","e","preventDefault","trim","payload","publish","destination","stringify","handleRecipientChange","value","target","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","idx","onSubmit","required","_c","$RefreshReg$"],"sources":["C:/Users/ludmi/IdeaProjects/Mesenger/src/main/resources/static/src/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Client } from '@stomp/stompjs';\r\nimport SockJS from 'sockjs-client';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport './Chat.css';\r\n\r\nfunction Chat() {\r\n    const [message, setMessage] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);\r\n    const [recipientId, setRecipientId] = useState(\"\");\r\n    const [myId, setMyId] = useState(null);\r\n    const [connected, setConnected] = useState(false);\r\n    const clientRef = useRef(null);\r\n\r\n    const getToken = () => {\r\n        const match = document.cookie.match(new RegExp('(^| )token=([^;]+)'));\r\n        return match ? match[2] : null;\r\n    };\r\n\r\n    const fetchMessages = async (recipientId) => {\r\n        try {\r\n            const res = await fetch(`/messages/${myId}/${recipientId}`);\r\n            if (res.ok) {\r\n                const data = await res.json();\r\n                setMessages(\r\n                    data.map(msg => ({\r\n                        sender: msg.senderId === myId ? \"Я\" : \"Он\",\r\n                        text: msg.content\r\n                    }))\r\n                );\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Не удалось загрузить сообщения\", err);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const token = getToken();\r\n        if (!token) {\r\n            alert(\"❌ Нет токена. Пожалуйста, войдите снова.\");\r\n            window.location.href = \"/\";\r\n            return;\r\n        }\r\n\r\n        const decoded = jwtDecode(token);\r\n        setMyId(decoded.sub || decoded.userId);\r\n\r\n        const socket = new SockJS(\"/ws\");\r\n        const client = new Client({\r\n            webSocketFactory: () => socket,\r\n            connectHeaders: { Authorization: `Bearer ${token}` },\r\n            onConnect: () => {\r\n                console.log(\"🟢 Подключено к WebSocket\");\r\n                setConnected(true);\r\n\r\n                client.subscribe(\"/user/queue/messages\", (msg) => {\r\n                    const body = JSON.parse(msg.body);\r\n                    if (\r\n                        (body.senderId === recipientId && body.recipientId === myId) ||\r\n                        (body.senderId === myId && body.recipientId === recipientId)\r\n                    ) {\r\n                        setMessages(prev => [...prev, {\r\n                            sender: body.senderId === myId ? \"Я\" : \"Он\",\r\n                            text: body.content\r\n                        }]);\r\n                    }\r\n                });\r\n            },\r\n            onStompError: (frame) => {\r\n                console.error(\"STOMP ошибка: \", frame);\r\n            },\r\n            reconnectDelay: 5000,\r\n        });\r\n\r\n        client.activate();\r\n        clientRef.current = client;\r\n\r\n        return () => {\r\n            client.deactivate();\r\n            setConnected(false);\r\n        };\r\n    }, []);\r\n\r\n    const handleSend = (e) => {\r\n        e.preventDefault();\r\n        if (!message.trim() || !recipientId.trim()) return;\r\n\r\n        const client = clientRef.current;\r\n\r\n        if (!client || !client.connected) {\r\n            alert(\"⛔ Подключение ещё не установлено. Подождите немного.\");\r\n            return;\r\n        }\r\n\r\n        const payload = {\r\n            senderId: myId,\r\n            recipientId,\r\n            content: message,\r\n        };\r\n\r\n        client.publish({\r\n            destination: \"/app/chat\",\r\n            body: JSON.stringify(payload),\r\n        });\r\n\r\n        setMessages([...messages, { sender: \"Я\", text: message }]);\r\n        setMessage(\"\");\r\n    };\r\n\r\n    const handleRecipientChange = (e) => {\r\n        const value = e.target.value;\r\n        setRecipientId(value);\r\n        if (value && myId) {\r\n            fetchMessages(value);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <div className=\"chat-box\">\r\n                <div className=\"chat-header\">💬 Мессенджер</div>\r\n\r\n                <div className=\"status\">\r\n                    {connected ? \"🟢 Подключено\" : \"🔴 Подключение...\"}\r\n                </div>\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    value={recipientId}\r\n                    onChange={handleRecipientChange}\r\n                    placeholder=\"ID получателя\"\r\n                    className=\"recipient-input\"\r\n                />\r\n\r\n                <div className=\"messages\">\r\n                    {messages.map((msg, idx) => (\r\n                        <div key={idx} className=\"message\">\r\n                            <strong>{msg.sender}:</strong> {msg.text}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                <form onSubmit={handleSend} className=\"input-form\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={message}\r\n                        onChange={(e) => setMessage(e.target.value)}\r\n                        placeholder=\"Введите сообщение...\"\r\n                        className=\"message-input\"\r\n                        required\r\n                    />\r\n                    <button type=\"submit\" className=\"send-button\">Отправить</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}