{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ludmi\\\\IdeaProjects\\\\Mesenger\\\\src\\\\main\\\\resources\\\\static\\\\src\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Client } from \"@stomp/stompjs\";\nimport SockJS from \"sockjs-client\";\nimport { jwtDecode } from \"jwt-decode\";\nimport \"./Chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [recipientId, setRecipientId] = useState(\"\");\n  const [myId, setMyId] = useState(null);\n  const [connected, setConnected] = useState(false);\n  const [dialogs, setDialogs] = useState([]);\n  const clientRef = useRef(null);\n  const getToken = () => {\n    const match = document.cookie.match(new RegExp(\"(^| )token=([^;]+)\"));\n    return match ? match[2] : null;\n  };\n  const fetchMessages = async recipientId => {\n    try {\n      const token = getToken();\n      const res = await fetch(`/messages/${myId}/${recipientId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (res.ok) {\n        const data = await res.json();\n        setMessages(data.map(msg => ({\n          sender: msg.senderId === myId ? \"Я\" : \"Он\",\n          text: msg.content\n        })));\n      } else {\n        console.error(\"Ошибка загрузки сообщений:\", res.status);\n      }\n    } catch (err) {\n      console.error(\"Не удалось загрузить сообщения\", err);\n    }\n  };\n  useEffect(() => {\n    const token = getToken();\n    if (!token) {\n      alert(\"❌ Нет токена. Пожалуйста, войдите снова.\");\n      window.location.href = \"/\";\n      return;\n    }\n    const decoded = jwtDecode(token);\n    const id = decoded.userId;\n    if (!id) {\n      alert(\"⚠️ Токен не содержит userId. Нужна корректировка бэка.\");\n      return;\n    }\n    setMyId(id);\n    const socket = new SockJS(\"http://localhost:8080/ws\");\n    const client = new Client({\n      webSocketFactory: () => socket,\n      connectHeaders: {\n        Authorization: `Bearer ${token}`\n      },\n      onConnect: () => {\n        console.log(\"🟢 Подключено к WebSocket\");\n        setConnected(true);\n        client.subscribe(\"/user/queue/messages\", msg => {\n          const body = JSON.parse(msg.body);\n          const isForCurrentChat = body.senderId === recipientId && body.recipientId === myId || body.senderId === myId && body.recipientId === recipientId;\n          if (isForCurrentChat) {\n            setMessages(prev => [...prev, {\n              sender: body.senderId === myId ? \"Я\" : \"Он\",\n              text: body.content\n            }]);\n          }\n        });\n      },\n      onStompError: frame => {\n        console.error(\"STOMP ошибка: \", frame);\n      },\n      reconnectDelay: 5000\n    });\n    client.activate();\n    clientRef.current = client;\n    return () => {\n      client.deactivate();\n      setConnected(false);\n    };\n  }, []);\n\n  // Загружаем список собеседников\n  useEffect(() => {\n    if (!myId) return;\n    const token = getToken();\n    fetch(`/dialogs/${myId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => res.json()).then(setDialogs).catch(console.error);\n  }, [myId]);\n  const handleSend = e => {\n    e.preventDefault();\n    if (!message.trim() || !recipientId.trim()) return;\n    const client = clientRef.current;\n    if (!client || !client.connected) {\n      alert(\"⛔ Подключение ещё не установлено. Подождите немного.\");\n      return;\n    }\n    const payload = {\n      senderId: myId,\n      recipientId,\n      content: message\n    };\n    client.publish({\n      destination: \"/app/chat\",\n      body: JSON.stringify(payload)\n    });\n    setMessages(prev => [...prev, {\n      sender: \"Я\",\n      text: message\n    }]);\n    setMessage(\"\");\n  };\n  const handleSelectDialog = id => {\n    setRecipientId(id);\n    fetchMessages(id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-layout\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDCAC \\u0414\\u0438\\u0430\\u043B\\u043E\\u0433\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), dialogs.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u041D\\u0435\\u0442 \\u043F\\u0435\\u0440\\u0435\\u043F\\u0438\\u0441\\u043E\\u043A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 42\n      }, this), dialogs.map(dialog => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `dialog-item ${recipientId === dialog.id ? \"active\" : \"\"}`,\n        onClick: () => handleSelectDialog(dialog.id),\n        children: dialog.name || dialog.id\n      }, dialog.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          children: [\"\\uD83D\\uDCAC \\u041C\\u0435\\u0441\\u0441\\u0435\\u043D\\u0434\\u0436\\u0435\\u0440\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status\",\n            children: connected ? \"🟢 Подключено\" : \"🔴 Подключение...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages\",\n          children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [msg.sender, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 33\n            }, this), \" \", msg.text]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSend,\n          className: \"input-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435...\",\n            className: \"message-input\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"send-button\",\n            children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"ekqxbx0X9tgmFZzkJolNDU+/dxY=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Client","SockJS","jwtDecode","jsxDEV","_jsxDEV","Chat","_s","message","setMessage","messages","setMessages","recipientId","setRecipientId","myId","setMyId","connected","setConnected","dialogs","setDialogs","clientRef","getToken","match","document","cookie","RegExp","fetchMessages","token","res","fetch","headers","Authorization","ok","data","json","map","msg","sender","senderId","text","content","console","error","status","err","alert","window","location","href","decoded","id","userId","socket","client","webSocketFactory","connectHeaders","onConnect","log","subscribe","body","JSON","parse","isForCurrentChat","prev","onStompError","frame","reconnectDelay","activate","current","deactivate","then","catch","handleSend","e","preventDefault","trim","payload","publish","destination","stringify","handleSelectDialog","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","dialog","onClick","name","idx","onSubmit","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/ludmi/IdeaProjects/Mesenger/src/main/resources/static/src/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Client } from \"@stomp/stompjs\";\r\nimport SockJS from \"sockjs-client\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport \"./Chat.css\";\r\n\r\nfunction Chat() {\r\n    const [message, setMessage] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);\r\n    const [recipientId, setRecipientId] = useState(\"\");\r\n    const [myId, setMyId] = useState(null);\r\n    const [connected, setConnected] = useState(false);\r\n    const [dialogs, setDialogs] = useState([]);\r\n    const clientRef = useRef(null);\r\n\r\n    const getToken = () => {\r\n        const match = document.cookie.match(new RegExp(\"(^| )token=([^;]+)\"));\r\n        return match ? match[2] : null;\r\n    };\r\n\r\n    const fetchMessages = async (recipientId) => {\r\n        try {\r\n            const token = getToken();\r\n            const res = await fetch(`/messages/${myId}/${recipientId}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n            if (res.ok) {\r\n                const data = await res.json();\r\n                setMessages(\r\n                    data.map((msg) => ({\r\n                        sender: msg.senderId === myId ? \"Я\" : \"Он\",\r\n                        text: msg.content,\r\n                    }))\r\n                );\r\n            } else {\r\n                console.error(\"Ошибка загрузки сообщений:\", res.status);\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Не удалось загрузить сообщения\", err);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const token = getToken();\r\n        if (!token) {\r\n            alert(\"❌ Нет токена. Пожалуйста, войдите снова.\");\r\n            window.location.href = \"/\";\r\n            return;\r\n        }\r\n\r\n        const decoded = jwtDecode(token);\r\n        const id = decoded.userId;\r\n        if (!id) {\r\n            alert(\"⚠️ Токен не содержит userId. Нужна корректировка бэка.\");\r\n            return;\r\n        }\r\n        setMyId(id);\r\n\r\n        const socket = new SockJS(\"http://localhost:8080/ws\");\r\n        const client = new Client({\r\n            webSocketFactory: () => socket,\r\n            connectHeaders: { Authorization: `Bearer ${token}` },\r\n            onConnect: () => {\r\n                console.log(\"🟢 Подключено к WebSocket\");\r\n                setConnected(true);\r\n\r\n                client.subscribe(\"/user/queue/messages\", (msg) => {\r\n                    const body = JSON.parse(msg.body);\r\n                    const isForCurrentChat =\r\n                        (body.senderId === recipientId && body.recipientId === myId) ||\r\n                        (body.senderId === myId && body.recipientId === recipientId);\r\n\r\n                    if (isForCurrentChat) {\r\n                        setMessages((prev) => [\r\n                            ...prev,\r\n                            {\r\n                                sender: body.senderId === myId ? \"Я\" : \"Он\",\r\n                                text: body.content,\r\n                            },\r\n                        ]);\r\n                    }\r\n                });\r\n            },\r\n            onStompError: (frame) => {\r\n                console.error(\"STOMP ошибка: \", frame);\r\n            },\r\n            reconnectDelay: 5000,\r\n        });\r\n\r\n        client.activate();\r\n        clientRef.current = client;\r\n\r\n        return () => {\r\n            client.deactivate();\r\n            setConnected(false);\r\n        };\r\n    }, []);\r\n\r\n    // Загружаем список собеседников\r\n    useEffect(() => {\r\n        if (!myId) return;\r\n        const token = getToken();\r\n        fetch(`/dialogs/${myId}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(setDialogs)\r\n            .catch(console.error);\r\n    }, [myId]);\r\n\r\n    const handleSend = (e) => {\r\n        e.preventDefault();\r\n        if (!message.trim() || !recipientId.trim()) return;\r\n\r\n        const client = clientRef.current;\r\n\r\n        if (!client || !client.connected) {\r\n            alert(\"⛔ Подключение ещё не установлено. Подождите немного.\");\r\n            return;\r\n        }\r\n\r\n        const payload = {\r\n            senderId: myId,\r\n            recipientId,\r\n            content: message,\r\n        };\r\n\r\n        client.publish({\r\n            destination: \"/app/chat\",\r\n            body: JSON.stringify(payload),\r\n        });\r\n\r\n        setMessages((prev) => [...prev, { sender: \"Я\", text: message }]);\r\n        setMessage(\"\");\r\n    };\r\n\r\n    const handleSelectDialog = (id) => {\r\n        setRecipientId(id);\r\n        fetchMessages(id);\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-layout\">\r\n            <div className=\"sidebar\">\r\n                <h3>💬 Диалоги</h3>\r\n                {dialogs.length === 0 && <p>Нет переписок</p>}\r\n                {dialogs.map((dialog) => (\r\n                    <div\r\n                        key={dialog.id}\r\n                        className={`dialog-item ${recipientId === dialog.id ? \"active\" : \"\"}`}\r\n                        onClick={() => handleSelectDialog(dialog.id)}\r\n                    >\r\n                        {dialog.name || dialog.id}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"chat-container\">\r\n                <div className=\"chat-box\">\r\n                    <div className=\"chat-header\">\r\n                        💬 Мессенджер\r\n                        <span className=\"status\">\r\n                            {connected ? \"🟢 Подключено\" : \"🔴 Подключение...\"}\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div className=\"messages\">\r\n                        {messages.map((msg, idx) => (\r\n                            <div key={idx} className=\"message\">\r\n                                <strong>{msg.sender}:</strong> {msg.text}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n\r\n                    <form onSubmit={handleSend} className=\"input-form\">\r\n                        <input\r\n                            type=\"text\"\r\n                            value={message}\r\n                            onChange={(e) => setMessage(e.target.value)}\r\n                            placeholder=\"Введите сообщение...\"\r\n                            className=\"message-input\"\r\n                            required\r\n                        />\r\n                        <button type=\"submit\" className=\"send-button\">\r\n                            Отправить\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}