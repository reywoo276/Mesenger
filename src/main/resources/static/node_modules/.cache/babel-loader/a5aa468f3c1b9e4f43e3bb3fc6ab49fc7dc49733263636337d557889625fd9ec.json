{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ludmi\\\\IdeaProjects\\\\Mesenger\\\\src\\\\main\\\\resources\\\\static\\\\src\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // For navigating to other pages if needed\nimport SockJS from \"sockjs-client\"; // For WebSocket support with SockJS\nimport Stomp from \"stompjs\"; // For handling STOMP protocol over WebSocket\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([]); // To hold messages\n  const [newMessage, setNewMessage] = useState(\"\"); // To hold new message text\n  const [stompClient, setStompClient] = useState(null); // To manage the WebSocket connection\n  const [isConnected, setIsConnected] = useState(false); // Connection status\n  const navigate = useNavigate();\n  useEffect(() => {\n    const token = document.cookie.split(';').find(item => item.includes('token'));\n    if (!token) {\n      alert(\"❌ Вам нужно войти.\");\n      navigate(\"/sign-in\"); // Redirect to sign-in if no token\n    }\n\n    // Establish WebSocket connection when component mounts\n    const socket = new SockJS(\"/ws\"); // WebSocket endpoint\n    const client = Stomp.over(socket);\n    client.connect({}, () => {\n      setIsConnected(true);\n      setStompClient(client);\n\n      // Subscribe to the message queue for receiving messages\n      client.subscribe(\"/user/queue/messages\", messageOutput => {\n        const message = JSON.parse(messageOutput.body);\n        setMessages(prevMessages => [...prevMessages, message]);\n      });\n    });\n    return () => {\n      if (client) {\n        client.disconnect();\n      }\n    };\n  }, [navigate]);\n  const handleSendMessage = () => {\n    if (newMessage.trim()) {\n      const message = {\n        content: newMessage,\n        senderId: \"user-id\",\n        // Replace with actual user ID from token or state\n        recipientId: \"recipient-id\" // Replace with the recipient's ID\n      };\n      stompClient.send(\"/app/chat\", {}, JSON.stringify(message));\n      setNewMessage(\"\"); // Clear the input field after sending\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.chatContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.messagesContainer,\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.message,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [message.senderName, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.inputContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        style: styles.input,\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        style: styles.button,\n        disabled: !isConnected,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"iRHL1sfUHOYTrZQtCfZSehL4z18=\", false, function () {\n  return [useNavigate];\n});\n_c = Chat;\nconst styles = {\n  chatContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: \"100%\",\n    maxWidth: \"600px\",\n    margin: \"20px auto\",\n    padding: \"20px\",\n    borderRadius: \"8px\",\n    boxShadow: \"0 4px 10px rgba(0, 0, 0, 0.1)\",\n    backgroundColor: \"#f9f9f9\"\n  },\n  messagesContainer: {\n    width: \"100%\",\n    height: \"400px\",\n    overflowY: \"scroll\",\n    marginBottom: \"20px\",\n    paddingRight: \"10px\"\n  },\n  message: {\n    padding: \"8px 12px\",\n    marginBottom: \"10px\",\n    backgroundColor: \"#e3e3e3\",\n    borderRadius: \"10px\",\n    display: \"inline-block\",\n    wordBreak: \"break-word\",\n    maxWidth: \"70%\"\n  },\n  inputContainer: {\n    display: \"flex\",\n    width: \"100%\",\n    alignItems: \"center\"\n  },\n  input: {\n    width: \"80%\",\n    padding: \"10px\",\n    fontSize: \"1rem\",\n    borderRadius: \"8px\",\n    border: \"1px solid #ccc\",\n    marginRight: \"10px\"\n  },\n  button: {\n    padding: \"10px 15px\",\n    fontSize: \"1rem\",\n    backgroundColor: \"#5b73e8\",\n    color: \"#fff\",\n    border: \"none\",\n    borderRadius: \"6px\",\n    cursor: \"pointer\",\n    transition: \"background-color 0.3s\"\n  }\n};\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","SockJS","Stomp","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","newMessage","setNewMessage","stompClient","setStompClient","isConnected","setIsConnected","navigate","token","document","cookie","split","find","item","includes","alert","socket","client","over","connect","subscribe","messageOutput","message","JSON","parse","body","prevMessages","disconnect","handleSendMessage","trim","content","senderId","recipientId","send","stringify","style","styles","chatContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","messagesContainer","map","index","senderName","inputContainer","input","type","value","onChange","e","target","placeholder","onClick","button","disabled","_c","display","flexDirection","alignItems","width","maxWidth","margin","padding","borderRadius","boxShadow","backgroundColor","height","overflowY","marginBottom","paddingRight","wordBreak","fontSize","border","marginRight","color","cursor","transition","$RefreshReg$"],"sources":["C:/Users/ludmi/IdeaProjects/Mesenger/src/main/resources/static/src/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\"; // For navigating to other pages if needed\r\nimport SockJS from \"sockjs-client\"; // For WebSocket support with SockJS\r\nimport Stomp from \"stompjs\"; // For handling STOMP protocol over WebSocket\r\n\r\nconst Chat = () => {\r\n    const [messages, setMessages] = useState([]); // To hold messages\r\n    const [newMessage, setNewMessage] = useState(\"\"); // To hold new message text\r\n    const [stompClient, setStompClient] = useState(null); // To manage the WebSocket connection\r\n    const [isConnected, setIsConnected] = useState(false); // Connection status\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const token = document.cookie.split(';').find(item => item.includes('token'));\r\n        if (!token) {\r\n            alert(\"❌ Вам нужно войти.\");\r\n            navigate(\"/sign-in\"); // Redirect to sign-in if no token\r\n        }\r\n\r\n        // Establish WebSocket connection when component mounts\r\n        const socket = new SockJS(\"/ws\"); // WebSocket endpoint\r\n        const client = Stomp.over(socket);\r\n\r\n        client.connect({}, () => {\r\n            setIsConnected(true);\r\n            setStompClient(client);\r\n\r\n            // Subscribe to the message queue for receiving messages\r\n            client.subscribe(\"/user/queue/messages\", (messageOutput) => {\r\n                const message = JSON.parse(messageOutput.body);\r\n                setMessages(prevMessages => [...prevMessages, message]);\r\n            });\r\n        });\r\n\r\n        return () => {\r\n            if (client) {\r\n                client.disconnect();\r\n            }\r\n        };\r\n    }, [navigate]);\r\n\r\n    const handleSendMessage = () => {\r\n        if (newMessage.trim()) {\r\n            const message = {\r\n                content: newMessage,\r\n                senderId: \"user-id\",  // Replace with actual user ID from token or state\r\n                recipientId: \"recipient-id\",  // Replace with the recipient's ID\r\n            };\r\n\r\n            stompClient.send(\"/app/chat\", {}, JSON.stringify(message));\r\n            setNewMessage(\"\"); // Clear the input field after sending\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={styles.chatContainer}>\r\n            <h2>Chat</h2>\r\n            <div style={styles.messagesContainer}>\r\n                {messages.map((message, index) => (\r\n                    <div key={index} style={styles.message}>\r\n                        <strong>{message.senderName}: </strong>\r\n                        <span>{message.content}</span>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <div style={styles.inputContainer}>\r\n                <input\r\n                    style={styles.input}\r\n                    type=\"text\"\r\n                    value={newMessage}\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                    placeholder=\"Type your message...\"\r\n                />\r\n                <button onClick={handleSendMessage} style={styles.button} disabled={!isConnected}>\r\n                    Send\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst styles = {\r\n    chatContainer: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        maxWidth: \"600px\",\r\n        margin: \"20px auto\",\r\n        padding: \"20px\",\r\n        borderRadius: \"8px\",\r\n        boxShadow: \"0 4px 10px rgba(0, 0, 0, 0.1)\",\r\n        backgroundColor: \"#f9f9f9\",\r\n    },\r\n    messagesContainer: {\r\n        width: \"100%\",\r\n        height: \"400px\",\r\n        overflowY: \"scroll\",\r\n        marginBottom: \"20px\",\r\n        paddingRight: \"10px\",\r\n    },\r\n    message: {\r\n        padding: \"8px 12px\",\r\n        marginBottom: \"10px\",\r\n        backgroundColor: \"#e3e3e3\",\r\n        borderRadius: \"10px\",\r\n        display: \"inline-block\",\r\n        wordBreak: \"break-word\",\r\n        maxWidth: \"70%\",\r\n    },\r\n    inputContainer: {\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        alignItems: \"center\",\r\n    },\r\n    input: {\r\n        width: \"80%\",\r\n        padding: \"10px\",\r\n        fontSize: \"1rem\",\r\n        borderRadius: \"8px\",\r\n        border: \"1px solid #ccc\",\r\n        marginRight: \"10px\",\r\n    },\r\n    button: {\r\n        padding: \"10px 15px\",\r\n        fontSize: \"1rem\",\r\n        backgroundColor: \"#5b73e8\",\r\n        color: \"#fff\",\r\n        border: \"none\",\r\n        borderRadius: \"6px\",\r\n        cursor: \"pointer\",\r\n        transition: \"background-color 0.3s\",\r\n    },\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}