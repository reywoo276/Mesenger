{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ludmi\\\\IdeaProjects\\\\Mesenger\\\\src\\\\main\\\\resources\\\\static\\\\src\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Client } from \"@stomp/stompjs\";\nimport SockJS from \"sockjs-client\";\nimport Stomp from \"stompjs\";\nimport \"./Chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [userId] = useState(1); // –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞ ‚Äî –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é\n  const [recipientId] = useState(2); // —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫\n  const stompClientRef = useRef(null);\n  useEffect(() => {\n    const socket = new SockJS(\"http://localhost:8080/ws\");\n    const stompClient = Stomp.over(socket);\n    stompClient.connect({}, () => {\n      stompClient.subscribe(`/user/${userId}/queue/messages`, msg => {\n        const notification = JSON.parse(msg.body);\n        fetch(`http://localhost:8080/messages/${notification.id}`).then(res => res.json()).then(data => {\n          setMessages(prev => [...prev, {\n            sender: data.senderName,\n            text: data.content\n          }]);\n        });\n      });\n    });\n    stompClientRef.current = stompClient;\n    return () => stompClient.disconnect();\n  }, [userId]);\n  const handleSend = e => {\n    e.preventDefault();\n    if (message.trim()) {\n      const chatMessage = {\n        senderId: userId,\n        recipientId: recipientId,\n        senderName: userId,\n        recipientName: recipientId,\n        content: message,\n        timestamp: new Date()\n      };\n      stompClientRef.current.send(\"/app/chat\", {}, JSON.stringify(chatMessage));\n      setMessages(prev => [...prev, {\n        sender: \"–Ø\",\n        text: message\n      }]);\n      setMessage(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: \"\\uD83D\\uDCAC \\u041C\\u0435\\u0441\\u0441\\u0435\\u043D\\u0434\\u0436\\u0435\\u0440\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.sender, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), \" \", msg.text]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSend,\n        className: \"input-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435...\",\n          className: \"message-input\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"send-button\",\n          children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"BMfv4VI0eMGZbAeXmGyfu4DZtbI=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Client","SockJS","Stomp","jsxDEV","_jsxDEV","Chat","_s","message","setMessage","messages","setMessages","userId","recipientId","stompClientRef","socket","stompClient","over","connect","subscribe","msg","notification","JSON","parse","body","fetch","id","then","res","json","data","prev","sender","senderName","text","content","current","disconnect","handleSend","e","preventDefault","trim","chatMessage","senderId","recipientName","timestamp","Date","send","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","idx","onSubmit","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/ludmi/IdeaProjects/Mesenger/src/main/resources/static/src/Chat.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Client } from \"@stomp/stompjs\";\r\nimport SockJS from \"sockjs-client\";\r\nimport Stomp from \"stompjs\";\r\nimport \"./Chat.css\";\r\n\r\nconst Chat = () => {\r\n    const [message, setMessage] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);\r\n    const [userId] = useState(1); // –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞ ‚Äî –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é\r\n    const [recipientId] = useState(2); // —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫\r\n    const stompClientRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const socket = new SockJS(\"http://localhost:8080/ws\");\r\n        const stompClient = Stomp.over(socket);\r\n        stompClient.connect({}, () => {\r\n            stompClient.subscribe(`/user/${userId}/queue/messages`, (msg) => {\r\n                const notification = JSON.parse(msg.body);\r\n                fetch(`http://localhost:8080/messages/${notification.id}`)\r\n                    .then((res) => res.json())\r\n                    .then((data) => {\r\n                        setMessages((prev) => [...prev, { sender: data.senderName, text: data.content }]);\r\n                    });\r\n            });\r\n        });\r\n        stompClientRef.current = stompClient;\r\n        return () => stompClient.disconnect();\r\n    }, [userId]);\r\n\r\n    const handleSend = (e) => {\r\n        e.preventDefault();\r\n        if (message.trim()) {\r\n            const chatMessage = {\r\n                senderId: userId,\r\n                recipientId: recipientId,\r\n                senderName: userId,\r\n                recipientName: recipientId,\r\n                content: message,\r\n                timestamp: new Date(),\r\n            };\r\n            stompClientRef.current.send(\"/app/chat\", {}, JSON.stringify(chatMessage));\r\n            setMessages((prev) => [...prev, { sender: \"–Ø\", text: message }]);\r\n            setMessage(\"\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <div className=\"chat-box\">\r\n                <div className=\"chat-header\">üí¨ –ú–µ—Å—Å–µ–Ω–¥–∂–µ—Ä</div>\r\n                <div className=\"messages\">\r\n                    {messages.map((msg, idx) => (\r\n                        <div key={idx} className=\"message\">\r\n                            <strong>{msg.sender}:</strong> {msg.text}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <form onSubmit={handleSend} className=\"input-form\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={message}\r\n                        onChange={(e) => setMessage(e.target.value)}\r\n                        placeholder=\"–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...\"\r\n                        className=\"message-input\"\r\n                        required\r\n                    />\r\n                    <button type=\"submit\" className=\"send-button\">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}